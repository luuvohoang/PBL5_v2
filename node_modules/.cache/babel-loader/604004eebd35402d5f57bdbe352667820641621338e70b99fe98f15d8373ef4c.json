{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // Changed to HTTP and port 5000\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const getProducts = async category => {\n  try {\n    const response = await api.get(`/products${category ? `?category=${category}` : ''}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};\nexport const getProduct = async id => {\n  const response = await api.get(`/products/${id}`);\n  return response.data;\n};\nexport const createProduct = async product => {\n  try {\n    const response = await api.post('/products', product);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating product:', error);\n    throw error;\n  }\n};\nexport const updateProduct = async (id, product) => {\n  try {\n    const response = await api.put(`/products/${id}`, product);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product:', error);\n    throw error;\n  }\n};\nexport const deleteProduct = async id => {\n  try {\n    await api.delete(`/products/${id}`);\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    throw error;\n  }\n};\nexport const searchProducts = async params => {\n  try {\n    const response = await api.get('/products/search', {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching products:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","getProducts","category","response","get","data","error","console","getProduct","id","createProduct","product","post","updateProduct","put","deleteProduct","delete","searchProducts","params"],"sources":["C:/Users/GIGABYTE/Desktop/PBL5/project1/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';  // Changed to HTTP and port 5000\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport const getProducts = async (category) => {\r\n    try {\r\n        const response = await api.get(`/products${category ? `?category=${category}` : ''}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getProduct = async (id) => {\r\n    const response = await api.get(`/products/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const createProduct = async (product) => {\r\n    try {\r\n        const response = await api.post('/products', product);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateProduct = async (id, product) => {\r\n    try {\r\n        const response = await api.put(`/products/${id}`, product);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n    try {\r\n        await api.delete(`/products/${id}`);\r\n    } catch (error) {\r\n        console.error('Error deleting product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const searchProducts = async (params) => {\r\n    try {\r\n        const response = await api.get('/products/search', { params });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error searching products:', error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAE;;AAE9C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,YAAYF,QAAQ,GAAG,aAAaA,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC;IACrF,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,EAAE,IAAK;EACpC,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,aAAaK,EAAE,EAAE,CAAC;EACjD,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACe,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;IACrD,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMO,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,OAAO,KAAK;EAChD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACiB,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,OAAO,CAAC;IAC1D,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMS,aAAa,GAAG,MAAON,EAAE,IAAK;EACvC,IAAI;IACA,MAAMZ,GAAG,CAACmB,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;EACvC,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMW,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC5C,IAAI;IACA,MAAMf,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,kBAAkB,EAAE;MAAEc;IAAO,CAAC,CAAC;IAC9D,OAAOf,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}