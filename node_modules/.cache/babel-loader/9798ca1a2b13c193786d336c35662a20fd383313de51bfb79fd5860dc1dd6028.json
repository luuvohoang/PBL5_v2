{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user !== null && user !== void 0 && user.role) {\n    config.headers['UserRole'] = user.role;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst API_URL = 'http://localhost:5000/api'; // Make sure this matches your backend URL\n\nexport const getProducts = async category => {\n  const response = await axios.get(`${API_URL}/products${category ? `?category=${category}` : ''}`);\n  return response.data;\n};\nexport const getProduct = async id => {\n  const response = await axios.get(`${API_URL}/products/${id}`);\n  return response.data;\n};\nexport const getProductById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/products/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\nexport const createProduct = async productData => {\n  try {\n    const response = await axios.post(`${API_URL}/products`, productData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating product:', error);\n    throw error;\n  }\n};\nexport const updateProduct = async (id, productData) => {\n  try {\n    const response = await axios.put(`${API_URL}/products/${id}`, productData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product:', error);\n    throw error;\n  }\n};\nexport const deleteProduct = async id => {\n  try {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const response = await axios.delete(`${API_URL}/products/${id}`, {\n      headers: {\n        'Authorization': `Bearer ${user === null || user === void 0 ? void 0 : user.token}`,\n        'UserRole': user === null || user === void 0 ? void 0 : user.role,\n        'UserId': user === null || user === void 0 ? void 0 : user.id\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error deleting product:', error);\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n  }\n};\nexport const testConnection = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/products/test-connection`);\n    console.log('Database connection test:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Connection test failed:', error);\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  const response = await axios.post(`${API_URL}/auth/login`, {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, {\n      username: userData.username,\n      email: userData.email,\n      password: userData.password\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n};\nexport const getCategories = async () => {\n  const response = await axios.get(`${API_URL}/categories`);\n  return response.data;\n};\nexport const getCategoryProducts = async categoryId => {\n  const response = await axios.get(`${API_URL}/categories/${categoryId}/products`);\n  return response.data;\n};\nexport const getSales = async () => {\n  const response = await axios.get(`${API_URL}/sales`);\n  return response.data;\n};\nexport const getSale = async id => {\n  const response = await axios.get(`${API_URL}/sales/${id}`);\n  return response.data;\n};\nexport const createSale = async saleData => {\n  const response = await axios.post(`${API_URL}/sales`, saleData);\n  return response.data;\n};\nexport const updateSaleProducts = async (saleId, productIds) => {\n  const response = await axios.put(`${API_URL}/sales/${saleId}/products`, productIds);\n  return response.data;\n};\nexport const getEmployees = async () => {\n  const response = await axios.get(`${API_URL}/employees`);\n  return response.data;\n};\nexport const getEmployee = async id => {\n  const response = await axios.get(`${API_URL}/employees/${id}`);\n  return response.data;\n};\nexport const createEmployee = async employeeData => {\n  try {\n    const response = await axios.post(`${API_URL}/employees`, employeeData);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('CreateEmployee API error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nexport const updateEmployee = async (id, employeeData) => {\n  const response = await axios.put(`${API_URL}/employees/${id}`, employeeData);\n  return response.data;\n};\nexport const deleteEmployee = async id => {\n  const response = await axios.delete(`${API_URL}/employees/${id}`);\n  return response.data;\n};\nexport const getRoles = async () => {\n  const response = await axios.get(`${API_URL}/roles`);\n  return response.data;\n};\nexport const getRole = async id => {\n  const response = await axios.get(`${API_URL}/roles/${id}`);\n  return response.data;\n};\nexport const getCustomers = async () => {\n  const response = await axios.get(`${API_URL}/customers`);\n  return response.data;\n};\nexport const getConversation = async userId => {\n  try {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const response = await axios.get(`${API_URL}/messages/conversation/${userId}`, {\n      headers: {\n        'UserId': user.id.toString()\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('GetConversation API error:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const sendMessage = async messageData => {\n  try {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const response = await axios.post(`${API_URL}/messages`, messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'UserId': user.id.toString()\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error('SendMessage API error:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\nexport const markMessageAsRead = async messageId => {\n  const response = await axios.put(`${API_URL}/messages/${messageId}/read`);\n  return response.data;\n};","map":{"version":3,"names":["axios","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","role","headers","error","Promise","reject","API_URL","getProducts","category","response","get","data","getProduct","id","getProductById","console","createProduct","productData","post","updateProduct","put","deleteProduct","delete","token","_error$response","message","testConnection","log","login","email","password","register","userData","username","logout","removeItem","getCategories","getCategoryProducts","categoryId","getSales","getSale","createSale","saleData","updateSaleProducts","saleId","productIds","getEmployees","getEmployee","createEmployee","employeeData","_error$response2","updateEmployee","deleteEmployee","getRoles","getRole","getCustomers","getConversation","userId","toString","_error$response3","sendMessage","messageData","_error$response4","markMessageAsRead","messageId"],"sources":["C:/Users/GIGABYTE/Desktop/PBL5/project1/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user?.role) {\r\n            config.headers['UserRole'] = user.role;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst API_URL = 'http://localhost:5000/api';  // Make sure this matches your backend URL\r\n\r\nexport const getProducts = async (category) => {\r\n    const response = await axios.get(`${API_URL}/products${category ? `?category=${category}` : ''}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getProduct = async (id) => {\r\n    const response = await axios.get(`${API_URL}/products/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getProductById = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/products/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createProduct = async (productData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/products`, productData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateProduct = async (id, productData) => {\r\n    try {\r\n        const response = await axios.put(`${API_URL}/products/${id}`, productData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n    try {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const response = await axios.delete(`${API_URL}/products/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${user?.token}`,\r\n                'UserRole': user?.role,\r\n                'UserId': user?.id\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error deleting product:', error);\r\n        throw error.response?.data || error.message;\r\n    }\r\n};\r\n\r\nexport const testConnection = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/products/test-connection`);\r\n        console.log('Database connection test:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Connection test failed:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n    return response.data;\r\n};\r\n\r\nexport const register = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/auth/register`, {\r\n            username: userData.username,\r\n            email: userData.email,\r\n            password: userData.password\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Registration error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('user');\r\n};\r\n\r\nexport const getCategories = async () => {\r\n    const response = await axios.get(`${API_URL}/categories`);\r\n    return response.data;\r\n};\r\n\r\nexport const getCategoryProducts = async (categoryId) => {\r\n    const response = await axios.get(`${API_URL}/categories/${categoryId}/products`);\r\n    return response.data;\r\n};\r\n\r\nexport const getSales = async () => {\r\n    const response = await axios.get(`${API_URL}/sales`);\r\n    return response.data;\r\n};\r\n\r\nexport const getSale = async (id) => {\r\n    const response = await axios.get(`${API_URL}/sales/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const createSale = async (saleData) => {\r\n    const response = await axios.post(`${API_URL}/sales`, saleData);\r\n    return response.data;\r\n};\r\n\r\nexport const updateSaleProducts = async (saleId, productIds) => {\r\n    const response = await axios.put(`${API_URL}/sales/${saleId}/products`, productIds);\r\n    return response.data;\r\n};\r\n\r\nexport const getEmployees = async () => {\r\n    const response = await axios.get(`${API_URL}/employees`);\r\n    return response.data;\r\n};\r\n\r\nexport const getEmployee = async (id) => {\r\n    const response = await axios.get(`${API_URL}/employees/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const createEmployee = async (employeeData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/employees`, employeeData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('CreateEmployee API error:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateEmployee = async (id, employeeData) => {\r\n    const response = await axios.put(`${API_URL}/employees/${id}`, employeeData);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteEmployee = async (id) => {\r\n    const response = await axios.delete(`${API_URL}/employees/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getRoles = async () => {\r\n    const response = await axios.get(`${API_URL}/roles`);\r\n    return response.data;\r\n};\r\n\r\nexport const getRole = async (id) => {\r\n    const response = await axios.get(`${API_URL}/roles/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getCustomers = async () => {\r\n    const response = await axios.get(`${API_URL}/customers`);\r\n    return response.data;\r\n};\r\n\r\nexport const getConversation = async (userId) => {\r\n    try {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const response = await axios.get(`${API_URL}/messages/conversation/${userId}`, {\r\n            headers: {\r\n                'UserId': user.id.toString()\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('GetConversation API error:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const sendMessage = async (messageData) => {\r\n    try {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const response = await axios.post(`${API_URL}/messages`, messageData, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'UserId': user.id.toString()\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('SendMessage API error:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const markMessageAsRead = async (messageId) => {\r\n    const response = await axios.put(`${API_URL}/messages/${messageId}/read`);\r\n    return response.data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}