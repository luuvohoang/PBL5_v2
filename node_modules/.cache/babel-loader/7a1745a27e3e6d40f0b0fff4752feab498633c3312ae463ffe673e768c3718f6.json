{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\PBL5\\\\project1\\\\src\\\\components\\\\CreateEmployeeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getRoles } from '../services/api';\nimport '../styles/EmployeeForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateEmployeeForm = ({\n  onSubmit,\n  onClose\n}) => {\n  _s();\n  const [roles, setRoles] = useState([]);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    roleId: ''\n  });\n  useEffect(() => {\n    const fetchRoles = async () => {\n      try {\n        const rolesData = await getRoles();\n        setRoles(rolesData);\n        if (rolesData.length > 0) {\n          setFormData(prev => ({\n            ...prev,\n            roleId: rolesData[0].id\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching roles:', error);\n      }\n    };\n    fetchRoles();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!formData.email || !formData.password || !formData.roleId) {\n        alert('Please fill in all required fields');\n        return;\n      }\n      onSubmit(formData);\n    } catch (error) {\n      console.error('Form submission error:', error);\n      alert('Error creating employee. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-form-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: formData.email,\n            onChange: e => setFormData({\n              ...formData,\n              email: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: formData.password,\n            onChange: e => setFormData({\n              ...formData,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.roleId,\n            onChange: e => setFormData({\n              ...formData,\n              roleId: Number(e.target.value)\n            }),\n            required: true,\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role.id,\n              children: role.name\n            }, role.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-save\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-cancel\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateEmployeeForm, \"QaR/HehhBtAYpjZ+YbEmPpsMeXE=\");\n_c = CreateEmployeeForm;\nexport default CreateEmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"CreateEmployeeForm\");","map":{"version":3,"names":["React","useState","useEffect","getRoles","jsxDEV","_jsxDEV","CreateEmployeeForm","onSubmit","onClose","_s","roles","setRoles","formData","setFormData","email","password","roleId","fetchRoles","rolesData","length","prev","id","error","console","handleSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","Number","map","role","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/Desktop/PBL5/project1/src/components/CreateEmployeeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getRoles } from '../services/api';\r\nimport '../styles/EmployeeForm.css';\r\n\r\nconst CreateEmployeeForm = ({ onSubmit, onClose }) => {\r\n    const [roles, setRoles] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        roleId: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchRoles = async () => {\r\n            try {\r\n                const rolesData = await getRoles();\r\n                setRoles(rolesData);\r\n                if (rolesData.length > 0) {\r\n                    setFormData(prev => ({ ...prev, roleId: rolesData[0].id }));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching roles:', error);\r\n            }\r\n        };\r\n        fetchRoles();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (!formData.email || !formData.password || !formData.roleId) {\r\n                alert('Please fill in all required fields');\r\n                return;\r\n            }\r\n            onSubmit(formData);\r\n        } catch (error) {\r\n            console.error('Form submission error:', error);\r\n            alert('Error creating employee. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"employee-form-overlay\">\r\n            <div className=\"employee-form\">\r\n                <h2>Add New Employee</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={formData.email}\r\n                            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={formData.password}\r\n                            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Role:</label>\r\n                        <select\r\n                            value={formData.roleId}\r\n                            onChange={(e) => setFormData({ ...formData, roleId: Number(e.target.value) })}\r\n                            required\r\n                        >\r\n                            {roles.map(role => (\r\n                                <option key={role.id} value={role.id}>\r\n                                    {role.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-buttons\">\r\n                        <button type=\"submit\" className=\"btn-save\">Create</button>\r\n                        <button type=\"button\" className=\"btn-cancel\" onClick={onClose}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateEmployeeForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}