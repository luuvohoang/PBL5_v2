{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\PBL5\\\\project1\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  console.log('Protected Route - User:', user); // Thêm log để debug\n  console.log('Required Role:', requiredRole);\n  if (!user) {\n    console.log('No user found, redirecting to login');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  if (requiredRole && user.role !== requiredRole) {\n    console.log('User role does not match required role');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","user","JSON","parse","localStorage","getItem","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/Desktop/PBL5/project1/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    console.log('Protected Route - User:', user); // Thêm log để debug\r\n    console.log('Required Role:', requiredRole);\r\n\r\n    if (!user) {\r\n        console.log('No user found, redirecting to login');\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    if (requiredRole && user.role !== requiredRole) {\r\n        console.log('User role does not match required role');\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACnD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEN,IAAI,CAAC,CAAC,CAAC;EAC9CK,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,YAAY,CAAC;EAE3C,IAAI,CAACC,IAAI,EAAE;IACPK,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,oBAAOV,OAAA,CAACF,QAAQ;MAACa,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,IAAIZ,YAAY,IAAIC,IAAI,CAACY,IAAI,KAAKb,YAAY,EAAE;IAC5CM,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,oBAAOV,OAAA,CAACF,QAAQ;MAACa,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,OAAOb,QAAQ;AACnB,CAAC;AAACe,EAAA,GAhBIhB,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}