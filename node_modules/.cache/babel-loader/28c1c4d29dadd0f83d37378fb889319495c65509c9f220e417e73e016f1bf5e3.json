{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user) {\n    if (user.role) {\n      config.headers['UserRole'] = user.role;\n    }\n    if (user.id) {\n      config.headers['UserId'] = user.id;\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst API_URL = 'http://localhost:5000/api'; // Make sure this matches your backend URL\n\nexport const getProducts = async category => {\n  const response = await axios.get(`${API_URL}/products${category ? `?category=${category}` : ''}`);\n  return response.data;\n};\nexport const getProduct = async id => {\n  const response = await axios.get(`${API_URL}/products/${id}`);\n  return response.data;\n};\nexport const getProductById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/products/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n};\nexport const testConnection = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/products/test-connection`);\n    console.log('Database connection test:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Connection test failed:', error);\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  const response = await axios.post(`${API_URL}/auth/login`, {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, {\n      username: userData.username,\n      email: userData.email,\n      password: userData.password\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n};\nexport const getCategories = async () => {\n  const response = await axios.get(`${API_URL}/categories`);\n  return response.data;\n};\nexport const getCategoryProducts = async categoryId => {\n  const response = await axios.get(`${API_URL}/categories/${categoryId}/products`);\n  return response.data;\n};\nexport const getSales = async () => {\n  const response = await axios.get(`${API_URL}/sales`);\n  return response.data;\n};\nexport const getSale = async id => {\n  const response = await axios.get(`${API_URL}/sales/${id}`);\n  return response.data;\n};\nexport const createSale = async saleData => {\n  const response = await axios.post(`${API_URL}/sales`, saleData);\n  return response.data;\n};\nexport const updateSaleProducts = async (saleId, productIds) => {\n  const response = await axios.put(`${API_URL}/sales/${saleId}/products`, productIds);\n  return response.data;\n};\nexport const getEmployees = async () => {\n  const response = await axios.get(`${API_URL}/employees`);\n  return response.data;\n};\nexport const getEmployee = async id => {\n  const response = await axios.get(`${API_URL}/employees/${id}`);\n  return response.data;\n};\nexport const createEmployee = async employeeData => {\n  try {\n    const response = await axios.post(`${API_URL}/employees`, employeeData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('CreateEmployee API error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const updateEmployee = async (id, employeeData) => {\n  const response = await axios.put(`${API_URL}/employees/${id}`, employeeData);\n  return response.data;\n};\nexport const deleteEmployee = async id => {\n  const response = await axios.delete(`${API_URL}/employees/${id}`);\n  return response.data;\n};\nexport const getRoles = async () => {\n  const response = await axios.get(`${API_URL}/roles`);\n  return response.data;\n};\nexport const getRole = async id => {\n  const response = await axios.get(`${API_URL}/roles/${id}`);\n  return response.data;\n};\nexport const getCustomers = async () => {\n  const response = await axios.get(`${API_URL}/customers`);\n  return response.data;\n};\nexport const getConversation = async userId => {\n  const response = await axios.get(`${API_URL}/messages/conversation/${userId}`);\n  return response.data;\n};\nexport const sendMessage = async messageData => {\n  const response = await axios.post(`${API_URL}/messages`, messageData);\n  return response.data;\n};\nexport const markMessageAsRead = async messageId => {\n  const response = await axios.put(`${API_URL}/messages/${messageId}/read`);\n  return response.data;\n};","map":{"version":3,"names":["axios","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","role","headers","id","error","Promise","reject","API_URL","getProducts","category","response","get","data","getProduct","getProductById","console","testConnection","log","login","email","password","post","register","userData","username","logout","removeItem","getCategories","getCategoryProducts","categoryId","getSales","getSale","createSale","saleData","updateSaleProducts","saleId","productIds","put","getEmployees","getEmployee","createEmployee","employeeData","_error$response","message","updateEmployee","deleteEmployee","delete","getRoles","getRole","getCustomers","getConversation","userId","sendMessage","messageData","markMessageAsRead","messageId"],"sources":["C:/Users/GIGABYTE/Desktop/PBL5/project1/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user) {\r\n            if (user.role) {\r\n                config.headers['UserRole'] = user.role;\r\n            }\r\n            if (user.id) {\r\n                config.headers['UserId'] = user.id;\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst API_URL = 'http://localhost:5000/api';  // Make sure this matches your backend URL\r\n\r\nexport const getProducts = async (category) => {\r\n    const response = await axios.get(`${API_URL}/products${category ? `?category=${category}` : ''}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getProduct = async (id) => {\r\n    const response = await axios.get(`${API_URL}/products/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getProductById = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/products/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const testConnection = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/products/test-connection`);\r\n        console.log('Database connection test:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Connection test failed:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n    return response.data;\r\n};\r\n\r\nexport const register = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/auth/register`, {\r\n            username: userData.username,\r\n            email: userData.email,\r\n            password: userData.password\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Registration error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('user');\r\n};\r\n\r\nexport const getCategories = async () => {\r\n    const response = await axios.get(`${API_URL}/categories`);\r\n    return response.data;\r\n};\r\n\r\nexport const getCategoryProducts = async (categoryId) => {\r\n    const response = await axios.get(`${API_URL}/categories/${categoryId}/products`);\r\n    return response.data;\r\n};\r\n\r\nexport const getSales = async () => {\r\n    const response = await axios.get(`${API_URL}/sales`);\r\n    return response.data;\r\n};\r\n\r\nexport const getSale = async (id) => {\r\n    const response = await axios.get(`${API_URL}/sales/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const createSale = async (saleData) => {\r\n    const response = await axios.post(`${API_URL}/sales`, saleData);\r\n    return response.data;\r\n};\r\n\r\nexport const updateSaleProducts = async (saleId, productIds) => {\r\n    const response = await axios.put(`${API_URL}/sales/${saleId}/products`, productIds);\r\n    return response.data;\r\n};\r\n\r\nexport const getEmployees = async () => {\r\n    const response = await axios.get(`${API_URL}/employees`);\r\n    return response.data;\r\n};\r\n\r\nexport const getEmployee = async (id) => {\r\n    const response = await axios.get(`${API_URL}/employees/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const createEmployee = async (employeeData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/employees`, employeeData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('CreateEmployee API error:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateEmployee = async (id, employeeData) => {\r\n    const response = await axios.put(`${API_URL}/employees/${id}`, employeeData);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteEmployee = async (id) => {\r\n    const response = await axios.delete(`${API_URL}/employees/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getRoles = async () => {\r\n    const response = await axios.get(`${API_URL}/roles`);\r\n    return response.data;\r\n};\r\n\r\nexport const getRole = async (id) => {\r\n    const response = await axios.get(`${API_URL}/roles/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getCustomers = async () => {\r\n    const response = await axios.get(`${API_URL}/customers`);\r\n    return response.data;\r\n};\r\n\r\nexport const getConversation = async (userId) => {\r\n    const response = await axios.get(`${API_URL}/messages/conversation/${userId}`);\r\n    return response.data;\r\n};\r\n\r\nexport const sendMessage = async (messageData) => {\r\n    const response = await axios.post(`${API_URL}/messages`, messageData);\r\n    return response.data;\r\n};\r\n\r\nexport const markMessageAsRead = async (messageId) => {\r\n    const response = await axios.put(`${API_URL}/messages/${messageId}/read`);\r\n    return response.data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}